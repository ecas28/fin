@page "/prestamos/nueva"
@using fin.Shared.Modelo;
@inject HttpClient http
@inject NavigationManager navegar

<h3>Añadir prestamos nuevos</h3>

<EditForm Model="elPrestamo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="txtClienteId" class="form-label">ClienteId</label>
        <InputSelect id="txtClienteId" class="form-control" @bind-Value="elPrestamo.ClienteId">
            <option value="">Seleccione un Cliente</option>
            @foreach (var cliente in listaCliente)
            {
                <option value="@cliente.Id">@cliente.NombreCliente</option>
            }
        </InputSelect>
        <ValidationMessage For="(()=>elPrestamo.ClienteId)" />
    </div>

    <div class="mb-3">
        <label for="txtLibroId" class="form-label">LibroId</label>
        <InputSelect id="txtLibroId" class="form-control" @bind-Value="elPrestamo.LibroId">
            <option value="">Seleccione un Libro</option>
            @foreach (var libro in listaLibro)
            {
                <option value="@libro.Id">@libro.Nombrelibro</option>
            }
        </InputSelect>
        <ValidationMessage For="(()=>elPrestamo.LibroId)" />
    </div>

    <div class="row mb-3">
        <label for="txtInicio" class="col-2 col-form-label">Fecha de inicio del prestamo</label>
        <InputDate class="form-control" id="txtInicio" @bind-Value="elPrestamo.Inicioprestamo" />
        <ValidationMessage For="(()=>elPrestamo.Inicioprestamo)" />
    </div>

    <div class="row mb-3">
        <label for="txtVencimiento" class="col-2 col-form-label">Fecha de vencimiento del prestamo</label>
        <InputDate class="form-control" id="txtVencimiento" @bind-Value="elPrestamo.Vencimientoprestamo" />
        <ValidationMessage For="(()=>elPrestamo.Vencimientoprestamo)" />
    </div>

    <div class="row mb-3">
        <label for="txtDevolucion" class="col-2 col-form-label">Fecha de devolución del prestamo</label>
        <InputDate class="form-control" id="txtDevolucion" @bind-Value="elPrestamo.Fechadevolucion" />
        <ValidationMessage For="(()=>elPrestamo.Fechadevolucion)" />
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
</EditForm>

@code {
    private Prestamos elPrestamo = new Prestamos();
    private List<Cliente> listaCliente = new List<Cliente>();
    private List<Libro> listaLibro = new List<Libro>();



    protected override async Task OnInitializedAsync()
    {
        // Obtener la lista de pacientes y doctores desde el servidor
        listaCliente = await http.GetFromJsonAsync<List<Cliente>>("api/clientes");
        listaLibro = await http.GetFromJsonAsync<List<Libro>>("api/libros");
    }

    private async void Guardar()
    {
        await http.PostAsJsonAsync("api/prestamos", elPrestamo);
        navegar.NavigateTo("/prestamos");
    }
}